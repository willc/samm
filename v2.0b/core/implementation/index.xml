<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Implementation on OWASP SAMM</title>
    <link>https://owaspsamm.org/v2.0b/core/implementation/</link>
    <description>Recent content in Implementation on OWASP SAMM</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://owaspsamm.org/v2.0b/core/implementation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Secure Build</title>
      <link>https://owaspsamm.org/v2.0b/core/implementation/i-secure-build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/v2.0b/core/implementation/i-secure-build/</guid>
      <description>Short Description This practice focuses on creating a consistently repeatable build process and accounting for the security of application dependencies.
Long Description The Secure Build practice emphasises the importance of building software in a standardised, repeatable manner, and of doing so using secure components, including 3rd party software dependencies.
The first stream focuses on removing any subjectivity from the build process by striving for full automation. An automated build pipeline can include additional automated security checks such as SAST and DAST to gain further assurance and flag security regressions early by failing the build for example.</description>
    </item>
    
    <item>
      <title>Secure Deployment</title>
      <link>https://owaspsamm.org/v2.0b/core/implementation/i-secure-deployment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/v2.0b/core/implementation/i-secure-deployment/</guid>
      <description>Short Description This practice focuses on automatically securing deployments to the production environment and all required secrets.
Long Description One of the final stages in delivering secure software is ensuring the security and integrity of developed applications are not compromised during their deployment. To this end, the practice’s first stream focuses on removing manual error by automating the deployment process as much as possible, and making its success contingent upon the outcomes of integrated security verification checks.</description>
    </item>
    
    <item>
      <title>Defect Management</title>
      <link>https://owaspsamm.org/v2.0b/core/implementation/i-defect-management/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://owaspsamm.org/v2.0b/core/implementation/i-defect-management/</guid>
      <description>Short Description This practice focuses on managing security defects in software and their associated metrics.
Long Description The Defect Management practice focuses on collecting, recording, and analysing software security defects and enriching them with information to drive metrics-based decisions.
The practice’s first stream deals with the process of handling and managing defects to ensure released software has a given assurance level. The second stream focuses on enriching the information about the defects and deriving metrics to guide decisions about the security of individual projects and of the security assurance program as a whole.</description>
    </item>
    
  </channel>
</rss>